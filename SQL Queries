use Namma_Yatri

select * from trips;

select * from loc;

select * from duration;

select * from payment;



--1 Total TripId
select count(distinct tripid) Total_Tripid from trips_details 


--2 Total Trips
select tripid, count(tripid) as Count from trips_details
group by tripid
having count(tripid)<1;


 --3 Total Drivers
 select count(distinct driverid) Total_Drivers from trips;


 --4 Total Earning
 select sum(fare) Fare from trips;


 --5 Total completed trips
 select count(distinct tripid) Total_Trips from trips;


 --6 Total searches - 2161
 select sum(searches) Total_Searches from trips_details;


 --7 Searches got estimate(fare Estimate) - 1758
 select sum(searches_got_estimate) Fare_Estimate from trips_details;


 --8 Searches for qoutes - 1455
select sum(searches_for_quotes) Finding_Drivers from trips_details;


select * from trips_details 

 --9 Searches for qoutes - 1277
select sum(searches_got_quotes) Finding_Drivers from trips_details;


--10 Total driver cancelled - 1021
select count(*) - sum(driver_not_cancelled) Not_cancelled_by_driver from trips_details;


--11 OTP entered - 983
select sum(otp_entered) OTP_entered from trips_details;


--12 Total ride end - 983
select sum(end_ride) Total_Ride_End from trips_details;


--13 Avg distance per trip - 14
select avg(distance) from trips;


--14 Avg fare per trip - 764
select avg(fare) from trips;


--15 Distance travelled - 14148km
select sum(distance) from trips;


--16 Which is the most used payment method
select f are, a.method from payment a inner join

(select top 1 faremethod, count(tripid) Fare_method_Count from trips
group by faremethod
order by count(tripid) desc) b
on a.id=b.faremethod;


--17 Highest payment was made through which instrument or payment method?

select fare Highest_payment, a.method from payment a inner join
(select top 1 * from trips 
order by fare desc) b
on a.id=b.faremethod;

select * from trips

select a.method from payment a inner join
(select top 1 faremethod, sum(fare) Highest_Fare from trips
group by faremethod
order by sum(fare) desc) b
on a.id = b.faremethod;


--18 Which two locations have most trips
select * from
(select *, DENSE_RANK() over(order by Countt desc) rnk from
(select loc_from, loc_to, count(distinct tripid) Countt from trips
group by loc_from, loc_to)a)b
where rnk = 1;  


--19 Top 5 earning drivers
select * from trips

select * from
(select *, dense_rank() over(order by fare) rnk 
from
(select  driverid, sum(fare) fare from trips
group by driverid)a)b
where rnk<6


--20 Which duration had more trips(hour)

select * from
(select *, dense_rank() over(order by Countt desc) rnk
from 
(select duration, count(duration) Countt from trips
group by duration)a)b
where rnk = 1


--21 Which driver and customer pair had more order
select * from trips

select * from
(select *, dense_rank() over(order by cnt desc) rnk
from
(select driverid, custid, count(distinct tripid) cnt from trips
group by driverid, custid)a)b
where rnk=1



--22 Search to estimate result
select sum(searches_got_estimate)*100.0/sum(searches) from trips_details


--23 Which location got the highest no.of trips in each duration
select * from trips

select * from
(select *, rank() over(partition by duration order by cnt desc) rnk 
from
(select duration, loc_from, count(tripid) cnt from trips
group by duration, loc_from)a)b
where rnk = 1


--24 Which duration got the highest no. of trips in each location present
select * from
(select *, rank() over(partition by loc_from order by cnt desc) rnk 
from
(select duration, loc_from, count(tripid) cnt from trips
group by duration, loc_from)a)b
where rnk = 1


--25 Which location got the highest fare, highest cancellation and highest trips
  
 select * from trips

 --Highest Fare
 select * from 
 (select *, rank() over(order by fare desc) rnk 
 from
 (select loc_from, sum(fare) fare from trips
 group by loc_from)a)b
 where rnk=1

 --Highest Cancellation
 select * from trips;
 select count(*) from  trips_details;

 select * from
 (select *, rank() over(order by driver_cancelled desc) rnk
 from
 (select loc_from, count(*) -  sum(driver_not_cancelled) driver_cancelled from trips_details 
 group by loc_from)a)b
 where rnk =1 
 
 select * from
 (select *, rank() over(order by customer_cancelled desc) rnk
 from
 (select loc_from, count(*) -  sum(customer_not_cancelled) customer_cancelled from trips_details 
 group by loc_from)a)b
 where rnk =1 

 --Highest Trip
 select * from trips_details

 select * from 
 (select *, rank() over(order by cnt desc) rnk 
 from
 (select loc_from, count(tripid) cnt from trips
 group by loc_from)a)b
 where rnk=1


 --26 Which duration got highest trips and fare
 select * from 
 (select *, rank() over(order by trip desc) rnk 
 from
 (select duration, count(distinct tripid) trip from trips
 group by duration)a)b
 where rnk=1


 --duration got highest fare
  select * from 
 (select *, rank() over(order by fare desc) rnk 
 from
 (select duration, sum(fare) fare from trips
 group by duration)a)b
 where rnk=1



use Namma_Yatri


select * from loc

select sum(driver_not_cancelled) from trips_details
